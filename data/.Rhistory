total_count = sum(total_count),
proportion_available = sum(total_count - na_count) / sum(total_count)
)
final_result <- bind_rows(result, total_result)
print(final_result)
#number of species without body masses
na_count <- dbtrans |>
filter(is.na(`Body mass`) & !is.na(`Species_ID_gbif`)) |>
distinct(`Species_ID_gbif`) |>
nrow()
na_count
#For dispersal project
dispersalDB <- dbtrans |>
filter(`Movement type` == "Dispersal")
write_csv(dispersalDB, "DispersalUntransformed.csv")
#Save in other project location
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
write_csv(dispersalDB, "DispersalUntransformed.csv")
View(dbtrans)
birdlife <- dbtrans |>
filter(`MetaRef` == "BirdLife International")
View(birdlife)
View(birdlife)
birdlife <- dbtrans |>
filter(`MetaRef` == "BirdLife International")
birdlife |>
pull(`Reference`) |>
n_distinct()
birdlife |>
pull(`Species_ID_gbif`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "BirdLife International")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Bowman 2011")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Carbone et al 2005")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Carbone et al. 2005")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Cloyd & Dell. 2020")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Cloyed & Dell. 2020")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Comte Olden Fishery")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Comte Olden fishery")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Dyer et al. 2023")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Feldhaar & Schauer. 2018")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Harestad & Bunnel. 1979")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Hays & Scott. 2013")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Hein et al. 2012")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Hirt et al 2017b")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Hirt 2017b")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Joly et al. 2019")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#counting data
dbtrans |>
pull(`Movement type`) |>
n_distinct()
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Komonen & Muller. 2018 ")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Komonen & Muller. 2018")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Le Galliard et al. 2012")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
View(count)
View(count)
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Peredo-Arce et al. 2021")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Santini et al. 2013")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Smith & Green. 2005")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Tamburello et al. 2015")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Teitelbaum et al. 2015")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Trochet et al. 2014")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
View(count)
View(count)
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Tucker et al. 2014")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
View(count)
View(count)
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Tucker et al. 2022")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`MetaRef` == "Whitmee & Orme. 2013")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`Reference` == "McCaslin et al. 2020")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`Reference` == "Paradis et al. 1998")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#Counting number of studies, species and datapoints for metarefs
count <- dbtrans |>
filter(`Reference` == "Swift et al. 2021")
count |>
pull(`Species_ID_gbif`) |>
n_distinct()
count |>
pull(`Reference`) |>
n_distinct()
#number of species without body masses
na_count <- dbtrans |>
filter(is.na(`Body mass`) & !is.na(`Species_ID_gbif`)) |>
distinct(`Species_ID_gbif`) |>
nrow()
na_count
print(final_result)
#For dispersal project
dispersalDB <- dbtrans |>
filter(`Movement type` == "Dispersal")
write_csv(dispersalDB, "DispersalUntransformed.csv")
source("~/MovementDatabase/scripts/DataTransformation.R", echo=TRUE)
#Save in other project location
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
write_csv(dispersalDB, "DispersalUntransformed.csv")
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
library(tidyverse)
library(dplyr)
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
db <- read.csv("DispersalUntransformed.csv")
####Summarising data####
result <- db |>
group_by(Taxon) |>
summarize(
na_count = sum(is.na(Body.mass)),
total_count = n(),
proportion_available = 1 - sum(is.na(Body.mass)) / total_count
)
total_result <- result|>
summarise(
Taxon = "Total",
na_count = sum(na_count),
total_count = sum(total_count),
proportion_available = sum(total_count - na_count) / sum(total_count)
)
final_result <- bind_rows(result, total_result)
print(final_result)
total_result <- result|>
summarise(
Taxon = "Total",
na_count = sum(na_count),
total_count = sum(total_count),
proportion_available = sum(total_count - na_count) / sum(total_count)
)
final_result <- bind_rows(result, total_result)
print(final_result)
#counting data
db |>
pull(`MetaRef`) |>
n_distinct()
#counting data
db |>
pull(`Reference`) |>
n_distinct()
#counting data
db |>
pull(`Species_gbif`) |>
n_distinct()
#counting data
db |>
pull(`Species_ID_gbif`) |>
n_distinct()
View(db)
View(db)
View(db)
View(db)
#counting data
db |>
pull(`Class_gbif`) |>
n_distinct()
print(db, Class_gbif)
db |> print(Class_gbif)
#counting data
db |>
pull(`Class_gbif`)
#counting data
db |>
pull(`Class_gbif`) |>
n_distinct()
####Tidying up the data####
#converting units to meters
# Conversion factors
conversion_factors <- data.frame(
unit = c("ha", "km", "miles"),
factor = c(10000, 1000, 1609.34)
)
db1 <- db |>
left_join(conversion_factors, by = c("Units" = "unit")) |>
mutate(
Value = case_when(
!is.na(Value) & Units == "km/h" ~ Value * (1000 / 3600), # Convert km/h to m/h
!is.na(Value) & Units %in% c("ha", "km", "miles") ~ Value * factor, # Convert ha, km, miles to m
TRUE ~ Value
),
Unit = case_when(
!is.na(Value) & Units == "km/h" ~ "m/h", # Change unit for km/h to m/h
!is.na(Value) & Units %in% c("ha", "km", "miles") ~ "m", # Change unit for ha, km, miles to m
TRUE ~ Units
)
) |>
relocate(Unit, .after = `Value`) |>
select(-Units, -factor)
#converting trait database body mass values
# Conversion factors
conversion_factors1 <- data.frame(
unit = c("kg", "log(10)g"),
factor = c(1000, 1) # Conversion to grams
)
db2 <- db1 |>
left_join(conversion_factors1, by = c("Body.mass.database.Unit" = "unit")) |>
mutate(
Body.mass = case_when(
Body.mass.database.Unit %in% c("kg", "log(10)g") & !is.na(Body.mass) ~ Body.mass * factor,
TRUE ~ Body.mass
),
Body.mass.db.Unit.convert = case_when(
Body.mass.database.Unit %in% c("kg", "log(10)g") ~ "g",
TRUE ~ Body.mass.database.Unit
)
) |>
relocate(Body.mass.db.Unit.convert, .after = Body.mass.Units) |>
select(-Body.mass.database.Unit, -factor)
#Converting movement database body mass values
# Conversion factor for kg to g
conversion_factor_kg_to_g <- 1000
db3 <- db2 |>
mutate(
Body.mass = case_when(
Body.mass.Units == "kg" & !is.na(Body.mass) ~ Body.mass * conversion_factor_kg_to_g,
TRUE ~ Body.mass
),
Body.mass.Units.convert = case_when(
Body.mass.Units == "kg" ~ "g",
TRUE ~ Body.mass.Units
)
) |>
relocate(Body.mass.Units.convert, .after = Body.mass.Units) |>
select(-Body.mass.Units)
#Further filtering
#Removing m/h so we just have m - this removes all the Reptile data (n = 17)
#Remove rows with missing, zero, or infinite values for dispersal distance and body mass
db4 <- db3 |>
filter(Unit != "m/h") |>
select(-Body.mass.Units.convert, Body.mass.unit = Body.mass.db.Unit.convert) |>
filter(
!is.na(Value),
!is.infinite(Value),
Value != 0,          # Remove rows with Value equal to 0
!is.na(Body.mass),
!is.infinite(Body.mass),
Body.mass > 0
)
write_csv(db4, "DispersalTransformed.csv")
db5 <- read.csv("DispersalTransformed.csv")
#filtering for mean, median and maximum distances
meandb <- filter(db5, Statistic == "Mean")
meddb <- filter(db5, Statistic == "Median")
maxdb <- filter(db5, Statistic == "Maximum")
library(tidyverse)
library(dplyr)
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
db5 <- read.csv("DispersalTransformed.csv")
#filtering for mean, median and maximum distances
meandb <- filter(db5, Statistic == "Mean")
meddb <- filter(db5, Statistic == "Median")
maxdb <- filter(db5, Statistic == "Maximum")
####Linear regression for maximum####
#log transform
log_Body.mass_max <- log(maxdb$Body.mass)
log_Distance_max <- log(maxdb$Value)
#Linear regression model and extracting the slope (coefficient)
regression_max  <- lm(log_Distance_max ~ log_Body.mass_max, data = maxdb)
summary(regression_max)
# Create a scatter plot
scatter_plot_max <- ggplot(maxdb, aes(x = log_Body.mass_max, y = log_Distance_max)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log maximum Dispersal distance (m)") +
theme_minimal()
print(scatter_plot_max)
