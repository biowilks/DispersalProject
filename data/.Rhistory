# Left join 'masses' with 'database' and replace missing values
db <- database  |>
mutate(
db <- database  |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef)
db <- database  |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef))
View(db)
View(db)
db1 <- db |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) & !is.na(`Body mass`), MetaRef, `Body mass source`)
)
View(db1)
View(db1)
View(masses)
View(masses)
View(db1)
View(db1)
#include missing body mass data from the masses data frame
db2 <- db1 %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "databases", ifelse(is.na(`Body mass source`), Source, `Body mass source`)),
`Body mass` = ifelse(is.na(`Body mass`), Mass, `Body mass`),
`Units` = ifelse(is.na(`Body mass`), NA_character_, Unit)
) %>%
select(-Source, -Mass)
View(db2)
View(db2)
#include missing body mass data from the masses data frame
db2 <- db1 %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "databases", ifelse(is.na(`Body mass source`), Source, `Body mass source`)),
`Body mass` = ifelse(is.na(`Body mass`), Mass, `Body mass`),
`Body mass Units` = ifelse(is.na(`Body mass`), NA_character_, Unit)
) %>%
select(-Source, -Mass)
View(db2)
View(db2)
#include missing body mass data from the masses data frame
db2 <- db1 %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "databases", ifelse(is.na(`Body mass source`), Source, `Body mass source`)),
`Body mass` = ifelse(is.na(`Body mass`), Mass, `Body mass`),
`Body mass Units` = ifelse(is.na(`Body mass`), NA_character_, ifelse(is.na(`Body mass source`), Unit, `Body mass Units`))
) %>%
select(-Source, -Mass)
View(db2)
View(db2)
#include missing body mass data from the masses data frame
db2 <- db1 %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), ifelse(is.na(`Body mass source`), Source, `Body mass source`), `Body mass source`),
`Body mass` = ifelse(is.na(`Body mass`), Mass, `Body mass`),
`Body mass Units` = ifelse(is.na(`Body mass`), NA_character_,
ifelse(!is.na(Mass) & is.na(`Body mass source`), Unit, `Body mass Units`))
) %>%
select(-Source, -Mass)
View(db2)
View(db2)
# Left join by taxonomy, adding in trait refs to body mass source column
db <- database  |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef))
db1 <- db |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) & !is.na(`Body mass`), MetaRef, `Body mass source`)
)
View(db1)
# Left join by taxonomy, adding in trait refs to body mass source column
db <- database %>%
left_join(taxonomy, by = c("Species ID" = "original")) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef)
)
# Update Body mass source based on MetaRef for missing values
db1 <- db %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) & !is.na(`Body mass`), MetaRef, `Body mass source`)
)
View(db1)
# Include missing body mass data from the masses data frame
db2 <- db1 %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`) & !is.na(Mass), ifelse(is.na(`Body mass source`), Source, `Body mass source`), `Body mass source`),
`Body mass` = ifelse(is.na(`Body mass`) & !is.na(Mass), Mass, `Body mass`),
`Body mass Units` = ifelse(is.na(`Body mass`) & !is.na(Mass), Unit, `Body mass Units`)
) %>%
select(-Source, -Mass)
# Print a summary of missing values in Body mass source and Body mass Units
cat("Missing values in Body mass source:", sum(is.na(db2$`Body mass source`)), "\n")
cat("Missing values in Body mass Units:", sum(is.na(db2$`Body mass Units`)), "\n")
View(db2)
db2 <- db1 %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`) & !is.na(Mass), ifelse(is.na(`Body mass source`), Source, `Body mass source`), `Body mass source`),
`Body mass` = ifelse(is.na(`Body mass`) & !is.na(Mass), Mass, `Body mass`),
`Body mass Units` = ifelse(is.na(`Body mass`) & !is.na(Mass), Unit, `Body mass Units`)
) %>%
select(-Unit, -Mass)
View(db2)
View(db2)
<-
# Left join by taxonomy, adding in trait refs to body mass source column
db <- database  |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef))
db1 <- db |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) & !is.na(`Body mass`), MetaRef, `Body mass source`)
)
View(db1)
View(db1)
db2 <- db1 %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`) & !is.na(Mass), ifelse(is.na(`Body mass source`) & !is.na(Source), Source, `Body mass source`), `Body mass source`),
`Body mass` = ifelse(is.na(`Body mass`) & !is.na(Mass), Mass, `Body mass`),
`Body mass Units` = ifelse(is.na(`Body mass`) & !is.na(Mass), Unit, `Body mass Units`)
)
View(db2)
# Left join by taxonomy, adding in trait refs to body mass source column
db <- database  |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef))
db1 <- db |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) & !is.na(`Body mass`), MetaRef, `Body mass source`)
)
View(db1)
# Combine mass data from different sources into a single 'masses' data frame
masses <- bind_rows(
birds |> select(gbif.binomial, Wilman_Bird_mass_g),
mamm |> select(gbif.binomial, Wilman_Mam_mass_g),
anim |> select(gbif.binomial, Herberstein_mass_kg),
rep |> select(gbif.binomial, Slavenko_mass_log10_g),
marine |> select(gbif.binomial, McCauley_mass_g)
) |>
mutate(
Mass = coalesce(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g, Herberstein_mass_kg, McCauley_mass_g),
Source = case_when(
!is.na(Wilman_Bird_mass_g) ~ "Wilman et al 2014",
!is.na(Wilman_Mam_mass_g) ~ "Wilman et al 2014",
!is.na(Slavenko_mass_log10_g) ~ "Slavenko et al 2016",
!is.na(Herberstein_mass_kg) ~ "Herberstein et al 2022",
!is.na(McCauley_mass_g) ~ "McCauley et al 2015",
TRUE ~ NA_character_
),
Unit = case_when(
!is.na(Wilman_Bird_mass_g) ~ "g",
!is.na(Wilman_Mam_mass_g) ~ "g",
!is.na(Slavenko_mass_log10_g) ~ "log(10)g",
!is.na(Herberstein_mass_kg) ~ "kg",
!is.na(McCauley_mass_g) ~ "g",
TRUE ~ NA_character_
)
)  |>
select(-c(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g, Herberstein_mass_kg, McCauley_mass_g))
View(masses)
# Left join by taxonomy, adding in trait refs to body mass source column
db <- database  |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef))
db1 <- db |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) & !is.na(`Body mass`), MetaRef, `Body mass source`)
)
db2 <- db1 %>%
mutate(needs_mass = is.na(`Body mass`)) %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(needs_mass & !is.na(Mass), ifelse(is.na(`Body mass source`) & !is.na(Source), Source, `Body mass source`), `Body mass source`),
`Body mass` = ifelse(needs_mass & !is.na(Mass), Mass, `Body mass`),
`Body mass Units` = ifelse(needs_mass & !is.na(Mass), Unit, `Body mass Units`)
) %>%
select(-Source, -Mass, -Unit, -needs_mass)
View(db2)
# Left join by taxonomy, adding in trait refs to the body mass source column
db <- database %>%
left_join(taxonomy, by = c("Species ID" = "original")) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef)
)
# Modify the body mass source column based on missing values and existing data
db1 <- db %>%
mutate(
`Body mass source` = case_when(
is.na(`Body mass source`) & !is.na(`Body mass`) ~ MetaRef,
TRUE ~ `Body mass source`
)
)
# Include missing body mass data from the masses data frame
db2 <- db1 %>%
mutate(needs_mass = is.na(`Body mass`)) %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(needs_mass & !is.na(Mass), ifelse(is.na(`Body mass source`) & !is.na(Source), Source, `Body mass source`), `Body mass source`),
`Body mass` = ifelse(needs_mass & !is.na(Mass), Mass, `Body mass`),
`Body mass Units` = ifelse(needs_mass & !is.na(Mass), Unit, `Body mass Units`)
) %>%
select(-Source, -Mass, -Unit, -needs_mass)
# Left join by taxonomy, adding in trait refs to the body mass source column
db <- database |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef)
)
View(db)
View(db)
View(db)
# Modify the body mass source column based on missing values and existing data
db1 <- db |>
mutate(
`Body mass source` = ifelse(!is.na(`Body mass`) & is.na(`Body mass source`), MetaRef, `Body mass source`)
)
View(db1)
View(masses)
db2 <- db1 %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial")) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`) & !is.na(Mass) & is.na(`Body mass source`), Source, `Body mass source`),
`Body mass` = ifelse(is.na(`Body mass`) & !is.na(Mass), Mass, `Body mass`),
`Body mass Units` = ifelse(is.na(`Body mass`) & !is.na(Mass) & is.na(`Body mass Units`), Unit, `Body mass Units`)
) %>%
select(-Source, -Mass, -Unit)
# Left join with masses data frame to add missing body mass values
db2 <- db1 %>%
left_join(distinct(masses, gbif.binomial, Source, Unit), by = c("gbif.binomial")) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass`) & !is.na(Mass) & is.na(`Body mass source`), Source, `Body mass source`),
`Body mass` = ifelse(is.na(`Body mass`) & !is.na(Mass), Mass, `Body mass`),
`Body mass Units` = ifelse(is.na(`Body mass`) & !is.na(Mass) & is.na(`Body mass Units`), Unit, `Body mass Units`)
) %>%
select(-Source, -Mass, -Unit)
db2 <- db1 %>%
mutate(needs_mass = is.na(`Body mass`)) %>%
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass source` = ifelse(needs_mass & !is.na(Mass), ifelse(is.na(`Body mass source`) & !is.na(Source), Source, `Body mass source`), `Body mass source`),
`Body mass` = ifelse(needs_mass & !is.na(Mass), Mass, `Body mass`),
`Body mass Units` = ifelse(needs_mass & !is.na(Mass), Unit, `Body mass Units`)
) %>%
select(-Source, -Mass, -Unit, -needs_mass)
View(db2)
View(db1)
View(db1)
# Modify the body mass source column based on missing values and existing data
db1 <- db |>
mutate(
`Body mass source` = ifelse(!is.na(`Body mass`) & is.na(`Body mass source`), MetaRef, `Body mass source`)
)
# Include missing body mass data from the masses data frame
db2 <- db1|>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`) | `Body mass` == "", Mass, `Body mass`))
View(db2)
any_na <- any(is.na(db2$`Body mass`))
# Include missing body mass data from the masses data frame
db2 <- db1|>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`) | `Body mass` == "", Mass, `Body mass`))
# Modify the body mass source column based on missing values and existing data
db1 <- db |>
mutate(
`Body mass source` = ifelse(!is.na(`Body mass`) & is.na(`Body mass source`), MetaRef, `Body mass source`)
)
# Include missing body mass data from the masses data frame
db2 <- db1 |>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`) | `Body mass` == "", Mass, `Body mass`)
) %>%
select(-Source, -Mass, -Unit)  # Remove Source and Mass columns
# Add Source and Unit from masses dataframe based on gbif.binomial
db2 <- db2 %>%
left_join(
masses %>% select(gbif.binomial, Source, Unit),
by = c("gbif.binomial")
) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) | `Body mass source` == "", Source, `Body mass source`),
`Body mass Units` = ifelse(is.na(`Body mass Units`) | `Body mass Units` == "", Unit, `Body mass Units`)
) %>%
select(-Source, -Unit)  # Remove Source and Unit columns from masses dataframe
|>
# Include missing body mass data from the masses data frame
db2 <- db1 |>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`) | `Body mass` == "", Mass, `Body mass`)
) %>%
select(-Source, -Mass, -Unit)  # Remove Source and Mass columns
# Add Source and Unit from masses dataframe based on gbif.binomial
db3 <- db2 %>%
left_join(
masses %>% select(gbif.binomial, Source, Unit),
by = c("gbif.binomial")
) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) | `Body mass source` == "", Source, `Body mass source`),
`Body mass Units` = ifelse(is.na(`Body mass Units`) | `Body mass Units` == "", Unit, `Body mass Units`)
) %>%
select(-Source, -Unit)  # Remove Source and Unit columns from masses dataframe
# Add Source and Unit from masses dataframe based on gbif.binomial
db3 <- db2 %>%
left_join(
masses %>% select(gbif.binomial, Source, Unit),
by = c("gbif.binomial", relationship = "many-to-many")
) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) | `Body mass source` == "", Source, `Body mass source`),
`Body mass Units` = ifelse(is.na(`Body mass Units`) | `Body mass Units` == "", Unit, `Body mass Units`)
) %>%
select(-Source, -Unit)  # Remove Source and Unit columns from masses dataframe
# Add Source and Unit from masses dataframe based on gbif.binomial
db3 <- db2 %>%
left_join(
masses %>% select(gbif.binomial, Source, Unit),
by = "gbif.binomial"
) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) | `Body mass source` == "", Source, `Body mass source`),
`Body mass Units` = ifelse(is.na(`Body mass Units`) | `Body mass Units` == "", Unit, `Body mass Units`)
) %>%
select(-Source, -Unit)  # Remove Source and Unit columns from masses dataframe
# Modify the body mass source column based on missing values and existing data
db1 <- db |>
mutate(
`Body mass source` = ifelse(!is.na(`Body mass`) & is.na(`Body mass source`), MetaRef, `Body mass source`)
)
# Add Source and Unit from masses dataframe based on gbif.binomial
db3 <- db2 %>%
left_join(
masses %>% select(gbif.binomial, Source, Unit),
by = c("gbif.binomial", "Source")
) %>%
mutate(
`Body mass source` = ifelse(is.na(`Body mass source`) | `Body mass source` == "", Source, `Body mass source`),
`Body mass Units` = ifelse(is.na(`Body mass Units`) | `Body mass Units` == "", Unit, `Body mass Units`)
) %>%
select(-Source, -Unit)  # Remove Source and Unit columns from masses dataframe
# Include missing body mass data from the masses data frame
db2 <- db1 |>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`) | `Body mass` == "", Mass, `Body mass`)
) %>%
select(-Source, -Mass, -Unit)  # Remove Source and Mass columns
View(db2)
# Combine mass data from different sources into a single 'masses' data frame
masses <- bind_rows(
birds |> select(gbif.binomial, Wilman_Bird_mass_g),
mamm |> select(gbif.binomial, Wilman_Mam_mass_g),
anim |> select(gbif.binomial, Herberstein_mass_kg),
rep |> select(gbif.binomial, Slavenko_mass_log10_g),
marine |> select(gbif.binomial, McCauley_mass_g)
) |>
mutate(
Mass = coalesce(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g, Herberstein_mass_kg, McCauley_mass_g),
Source = case_when(
!is.na(Wilman_Bird_mass_g) ~ "Wilman et al 2014",
!is.na(Wilman_Mam_mass_g) ~ "Wilman et al 2014",
!is.na(Slavenko_mass_log10_g) ~ "Slavenko et al 2016",
!is.na(Herberstein_mass_kg) ~ "Herberstein et al 2022",
!is.na(McCauley_mass_g) ~ "McCauley et al 2015",
TRUE ~ NA_character_
),
Unit = case_when(
!is.na(Wilman_Bird_mass_g) ~ "g",
!is.na(Wilman_Mam_mass_g) ~ "g",
!is.na(Slavenko_mass_log10_g) ~ "log(10)g",
!is.na(Herberstein_mass_kg) ~ "kg",
!is.na(McCauley_mass_g) ~ "g",
TRUE ~ NA_character_
)
)  |>
select(-c(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g, Herberstein_mass_kg, McCauley_mass_g))
# Left join by taxonomy, adding in trait refs to the body mass source column
db <- database |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef)
)
# Modify the body mass source column based on missing values and existing data
db1 <- db |>
mutate(
`Body mass source` = ifelse(!is.na(`Body mass`) & is.na(`Body mass source`), MetaRef, `Body mass source`)
)
# Include missing body mass data from the masses data frame
db2 <- db1 |>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`) | `Body mass` == "", Mass, `Body mass`)
) %>%
select(-Source, -Mass, -Unit)  # Remove Source and Mass columns
View(db1)
write_csv(db2, "correctedspecies1.csv") #WRITE NAME name.csv
# Combine mass data from different sources into a single 'masses' data frame
masses <- bind_rows(
birds |> select(gbif.binomial, Wilman_Bird_mass_g),
mamm |> select(gbif.binomial, Wilman_Mam_mass_g),
anim |> select(gbif.binomial, Herberstein_mass_kg),
rep |> select(gbif.binomial, Slavenko_mass_log10_g),
marine |> select(gbif.binomial, McCauley_mass_g)
) |>
mutate(
Mass = coalesce(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g, Herberstein_mass_kg, McCauley_mass_g),
Source = case_when(
!is.na(Wilman_Bird_mass_g) ~ "Wilman et al 2014",
!is.na(Wilman_Mam_mass_g) ~ "Wilman et al 2014",
!is.na(Slavenko_mass_log10_g) ~ "Slavenko et al 2016",
!is.na(Herberstein_mass_kg) ~ "Herberstein et al 2022",
!is.na(McCauley_mass_g) ~ "McCauley et al 2015",
TRUE ~ NA_character_
),
Unit = case_when(
!is.na(Wilman_Bird_mass_g) ~ "g",
!is.na(Wilman_Mam_mass_g) ~ "g",
!is.na(Slavenko_mass_log10_g) ~ "log(10)g",
!is.na(Herberstein_mass_kg) ~ "kg",
!is.na(McCauley_mass_g) ~ "g",
TRUE ~ NA_character_
)
)  |>
select(-c(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g, Herberstein_mass_kg, McCauley_mass_g))
# Left join by taxonomy, adding in trait refs to the body mass source column
db <- database |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "NA", TraitRef)
)
# Modify the body mass source column based on missing values and existing data
db1 <- db |>
mutate(
`Body mass source` = ifelse(!is.na(`Body mass`) & is.na(`Body mass source`), MetaRef, `Body mass source`)
)
# Include missing body mass data from the masses data frame
db2 <- db1 |>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"),relationship = "many-to-many") |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`) | `Body mass` == "", "databases", `Body mass source`),
`Body mass` = ifelse(is.na(`Body mass`) | `Body mass` == "", Mass, `Body mass`)
) |>
select(-Source, -Mass, -Unit)  # Remove Source, Mass, and Unit columns from masses dataframe
View(db2)
# Include missing body mass data from the masses data frame
db2 <- db1 |>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"),relationship = "many-to-many") |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`) | `Body mass` == "", "databases", `Body mass source`),
`Body mass` = ifelse(is.na(`Body mass`) | `Body mass` == "", Mass, `Body mass`)
) |>
select(-Mass)  # Remove Source, Mass, and Unit columns from masses dataframe
write_csv(db2, "correctedspecies.csv") #WRITE NAME name.csv
writeLines(
strftime(Sys.time()),
con = "logs/CorrectSpeciesNames.R"
)
setwd('C:/Users/xr49abiw/Documents/MovementDatabase/data')
dbcorr <- read_csv("correctedspecies.csv")
dbtrans <- dbcorr |> relocate(gbif.binomial, .after = `Species ID`) |>
relocate(`family`, .after = `Sub-rank`)|>
relocate(`class`, .after = `Sub-rank`)|>
relocate(`Body mass source`, .after = `TraitRef`)|>
rename(Class_gbif = `class`)|>
rename(Family_gbif = `family`)|>
rename(Species_ID_gbif = `gbif.binomial`)|>
relocate(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g ,Herberstein_mass_kg,McCauley_mass_g, .after = `Body mass measured (y/n)`)|>
select(-c(...34)) |>
mutate(`Body mass source` = coalesce(`Body mass source`, MetaRef))
View(dbcorr)
dbtrans <- dbcorr |> relocate(gbif.binomial, .after = `Species ID`) |>
relocate(`family`, .after = `Sub-rank`)|>
relocate(`class`, .after = `Sub-rank`)|>
relocate(`Body mass source`, .after = `TraitRef`)|>
relocate( `Source`,.after = `Body mass source`)|>
rename(Class_gbif = `class`)|>
rename(Family_gbif = `family`)|>
rename(Species_ID_gbif = `gbif.binomial`)|>
rename(`Body mass database` = `Source`) |>
rename(`Body mass database Unit` = `Unit`) |>
relocate(`Body mass database Unit`, .after = `Body mass Units`)|>
select(-c(...34))
View(dbtrans)
write_csv(dbtrans, "MovementDatabaseExtensive.csv") #Still have some cases (~4000) with no body masses, will need additional trait databases
dispersalDB <- dbtrans |>
filter(`Movement type` == "Dispersal")
write_csv(dispersalDB, "DispersalUntransformed.csv")
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
db <- read.csv("DispersalUntransformed.csv")
#number of NA in body mass
num_na <- sum(is.na(db$Body.mass))
#number of NA in body mass
num_na <- sum(is.na(db$Body.mass))
num_na
