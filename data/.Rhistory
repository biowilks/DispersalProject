library(tidyverse)
library(dplyr)
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
db <- read.csv("DispersalUntransformed.csv")
####Figuring out data gaps####
count(db, is.na(Body.mass)) # Na = 566 dp
dbna <- filter(db, is.na(Body.mass))
count(dbna, Taxon)#Data points: Amphibian (133, bird (2), fish (247), invertebrate (116), mammal(68)
####Tidying up the data####
#converting units to meters
# Conversion factors
conversion_factors <- data.frame(
unit = c("ha", "km", "miles"),
factor = c(10000, 1000, 1609.34)
)
db1 <- db |>
left_join(conversion_factors, by = c("Units" = "unit")) |>
mutate(
Value = case_when(
!is.na(Value) & Units == "km/h" ~ Value * (1000 / 3600), # Convert km/h to m/h
!is.na(Value) & Units %in% c("ha", "km", "miles") ~ Value * factor, # Convert ha, km, miles to m
TRUE ~ Value
),
Unit = case_when(
!is.na(Value) & Units == "km/h" ~ "m/h", # Change unit for km/h to m/h
!is.na(Value) & Units %in% c("ha", "km", "miles") ~ "m", # Change unit for ha, km, miles to m
TRUE ~ Units
)
) |>
relocate(Unit, .after = `Value`) |>
select(-Units, -factor)
#converting trait database body mass values
# Conversion factors
conversion_factors1 <- data.frame(
unit = c("kg", "log(10)g"),
factor = c(1000, 1) # Conversion to grams
)
db2 <- db1 |>
left_join(conversion_factors1, by = c("Body.mass.database.Unit" = "unit")) |>
mutate(
Body.mass = case_when(
Body.mass.database.Unit %in% c("kg", "log(10)g") & !is.na(Body.mass) ~ Body.mass * factor,
TRUE ~ Body.mass
),
Body.mass.db.Unit.convert = case_when(
Body.mass.database.Unit %in% c("kg", "log(10)g") ~ "g",
TRUE ~ Body.mass.database.Unit
)
) |>
relocate(Body.mass.db.Unit.convert, .after = Body.mass.Units) |>
select(-Body.mass.database.Unit, -factor)
#Converting movement database body mass values
# Conversion factor for kg to g
conversion_factor_kg_to_g <- 1000
db3 <- db2 |>
mutate(
Body.mass = case_when(
Body.mass.Units == "kg" & !is.na(Body.mass) ~ Body.mass * conversion_factor_kg_to_g,
TRUE ~ Body.mass
),
Body.mass.Units.convert = case_when(
Body.mass.Units == "kg" ~ "g",
TRUE ~ Body.mass.Units
)
) |>
relocate(Body.mass.Units.convert, .after = Body.mass.Units) |>
select(-Body.mass.Units)
#Further filtering
#Removing m/h so we just have m - this removes all the Reptile data (n = 17)
#Remove rows with missing, zero, or infinite values for dispersal distance and body mass
db4 <- db3 |>
filter(Unit != "m/h") |>
select(-Body.mass.Units.convert, Body.mass.unit = Body.mass.db.Unit.convert) |>
filter(
!is.na(Value),
!is.infinite(Value),
Value != 0,          # Remove rows with Value equal to 0
!is.na(Body.mass),
!is.infinite(Body.mass),
Body.mass > 0
)
View(db4)
View(db4)
write_csv(db4, "DispersalTransformed.csv")
library(tidyverse)
library(dplyr)
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
db5 <- read.csv("DispersalTransformed.csv")
####Linear regression for all data ####
#log transform
log_Body.mass <- log(db5$Body.mass)
log_Distance <- log(db5$Value)
#Linear regression model and extracting the slope (coefficient)
regression  <- lm(log_Distance ~ log_Body.mass, data = db5)
summary(regression)
# Create a scatter plot
scatter_plot <- ggplot(db5, aes(x = log_Body.mass, y = log_Distance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
# Print the scatter plot with linear regression line
print(scatter_plot)
# Create a scatter plot
scatter_plot <- ggplot(db5, aes(x = Body.mass, y = Distance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
# Print the scatter plot with linear regression line
print(scatter_plot)
View(db5)
# Create a scatter plot
scatter_plot <- ggplot(db5, aes(x = Body.mass, y = Value)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
# Print the scatter plot with linear regression line
print(scatter_plot)
log_
# Create a scatter plot
scatter_plot <- ggplot(db5, aes(x = log_Body.mass, y = log_Distance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
# Print the scatter plot with linear regression line
print(scatter_plot)
View(db5)
####Linear regression for mammals####
# Filter data for mammals (n = 1567)
mammdb<- db5 |>
filter(Taxon == "Mammal")
# Perform log transformation
mammdb$log_Body.mass <- log(mammdb$Body.mass)
mammdb$log_Distance <- log(mammdb$Value)
# Perform linear regression
regression_mamm <- lm(log_Distance ~ log_Body.mass, data = mammdb)
# Create a scatter plot
scatter_plot_mamm <- ggplot(mammdb, aes(x = log_Body.mass, y = log_Distance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
print(scatter_plot_mamm)
summary(regression_mamm)
####Linear regression for birds####
# Filter data for bird (n = 2222)
bdb<- db5 |>
filter(Taxon == "Bird")
# Perform log transformation
bdb$log_Body.mass <- log(bdb$Body.mass)
bdb$log_Distance <- log(bdb$Value)
# Perform linear regression
regression_b <- lm(log_Distance ~ log_Body.mass, data = bdb)
summary(regression_b)
# Create a scatter plot
scatter_plot_b <- ggplot(bdb, aes(x = log_Body.mass, y = log_Distance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
print(scatter_plot_b)
####Linear regression for amphibian####
# Filter data for amphibian (n = 57)
adb<- db5 |>
filter(Taxon == "Amphibian")
# Perform log transformation
adb$log_Body.mass <- log(adb$Body.mass)
adb$log_Distance <- log(adb$Value)
summary(regression_a)
# Create a scatter plot
scatter_plot_a <- ggplot(adb, aes(x = log_Body.mass, y = log_Distance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
print(scatter_plot_a)
####Linear regression for fish####
# Filter data for Fish (n = 619)
fdb<- db5 |>
filter(Taxon == "Fish")
# Perform log transformation
fdb$log_Body.mass <- log(fdb$Body.mass)
fdb$log_Distance <- log(fdb$Value)
# Perform linear regression
regression_f <- lm(log_Distance ~ log_Body.mass, data = fdb)
summary(regression_f)
# Create a scatter plot
scatter_plot_f <- ggplot(fdb, aes(x = log_Body.mass, y = log_Distance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
print(scatter_plot_f)
####Linear regression for invertebrate####
# Filter data for invertebrate (n = 4)
idb<- db5 |>
filter(Taxon == "Invertebrate")
# Perform log transformation
idb$log_Body.mass <- log(idb$Body.mass)
idb$log_Distance <- log(idb$Value)
# Perform linear regression
regression_i <- lm(log_Distance ~ log_Body.mass, data = idb)
# Perform linear regression
regression_i <- lm(log_Distance ~ log_Body.mass, data = idb)
summary(regression_i)
# Create a scatter plot
scatter_plot_i <- ggplot(idb, aes(x = log_Body.mass, y = log_Distance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(x = "Log Body mass (g)", y = "Log Dispersal distance (m)") +
theme_minimal()
print(scatter_plot_i)
