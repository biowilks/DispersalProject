group_by(gbif.binomial) |>
summarize(EltonBmass = mean(mass), .groups = "drop") #VERY IMPORANT - HOW TO AGGREGATE
mamm <- eltonmam |>
transmute(
original = Scientific,
mass = `BodyMass-Value`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(EltonMmass = mean(mass), .groups = "drop")
rep <- repdat |>
transmute(
original = Binomial,
mass = `Maximum mass (log10(g))`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(repmass = mean(mass), .groups = "drop")
anim<-anidat |>
transmute(
original = species,
mass = `body mass`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(animass = mean(mass), .groups = "drop")
#this one isn't working, need to try again later
MV1 <-(mvertdat = mvertdat[-1,])
marine <- MV1>
transmute(
original = Species,
mass = `BM`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(marmass = mean(mass), .groups = "drop")
# BIND ALL DATABASES
masses <- bind_rows(birds, mamm, anim, rep)
suppressPackageStartupMessages(library(tidyverse))
options(readr.show_progress = FALSE)
datadir <- "data"
database <- read_tsv(file.path(datadir, "MovementDatabaseCleaned.txt"), show_col_types = FALSE)
eltonbird <- read_tsv(file.path(datadir, "BirdFuncDat.txt"), show_col_types = FALSE)
eltonmam <- read_tsv(file.path(datadir, "MamFuncDat.txt"), show_col_types = FALSE)
repdat <- read_tsv(file.path(datadir,'ReptileDAT.txt'), show_col_types = FALSE)
mvertdat<- read_tsv(file.path(datadir,'MarineVertDAT.txt'), show_col_types = FALSE)
anidat<- read_tsv(file.path(datadir,'AnimalTraits.txt'), show_col_types = FALSE)
taxonomy <- read_csv(file.path(datadir, "taxonomy.csv"), show_col_types = FALSE)|>
distinct(original, gbif.binomial) |>
filter(!is.na(original))
suppressPackageStartupMessages(library(tidyverse))
options(readr.show_progress = FALSE)
datadir <- "data"
database <- read_tsv("MovementDatabaseCleaned.txt")
eltonbird <- read_tsv("BirdFuncDat.txt")
eltonmam <- read_tsv("MamFuncDat.txt")
repdat <- read_tsv('ReptileDAT.txt')
mvertdat<- read_tsv('MarineVertDAT.txt')
anidat<- read_tsv('AnimalTraits.txt')
taxonomy <- read_csv("taxonomy.csv")|>
distinct(original, gbif.binomial, class, family) |>
filter(!is.na(original))
birds <- eltonbird |>
transmute(
original = Scientific,
mass = `BodyMass-Value`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(Wilman_Bird_mass_g = mean(mass), .groups = "drop") #VERY IMPORANT - HOW TO AGGREGATE
mamm <- eltonmam |>
transmute(
original = Scientific,
mass = `BodyMass-Value`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(Wilman_Mam_mass_g = mean(mass), .groups = "drop")
rep <- repdat |>
transmute(
original = Binomial,
mass = `Maximum mass (log10(g))`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(Slavenko_mass_log10_g = mean(mass), .groups = "drop")
anim<-anidat |>
transmute(
original = species,
mass = `body mass`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(Herberstein_mass_kg = mean(mass), .groups = "drop")
marine <- mvertdat |>
transmute(
original = Species,
mass = `BM_g`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(McCauley_mass_g = mean(mass), .groups = "drop")
# BIND ALL DATABASES
masses <- bind_rows(birds, mamm, anim, rep, marine)
db <- database |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "databases", TraitRef),
`Body mass` = ifelse(is.na(`Body mass`),
ifelse(!is.na(masses$Wilman_Bird_mass_g),masses$Wilman_Bird_mass_g,
ifelse(!is.na(masses$Wilman_mamm_mass_g), masses$Wilman_mam_Mass_g,
ifelse(!is.na(masses$Slavenko_mass_log10_g), masses$Slavenko_mass_log10_g,
ifelse(!is.na(masses$McCauley_mass_g), masses$McCauley_mass_g,
ifelse(!is.na(masses$Herberstein_mass_kg), masses$Herberstein_mass_kg, NA))))), `Body mass`)
)
write_csv(db, "correctedspecies.csv") #WRITE NAME name.csv
writeLines(
strftime(Sys.time()),
con = "logs/CorrectSpeciesNames.R"
)
suppressPackageStartupMessages(library(tidyverse))
options(readr.show_progress = FALSE)
datadir <- "data"
database <- read_tsv("MovementDatabaseCleaned.txt")
eltonbird <- read_tsv("BirdFuncDat.txt")
eltonmam <- read_tsv("MamFuncDat.txt")
repdat <- read_tsv('ReptileDAT.txt')
mvertdat<- read_tsv('MarineVertDAT.txt')
anidat<- read_tsv('AnimalTraits.txt')
taxonomy <- read_csv("taxonomy.csv")|>
distinct(original, gbif.binomial, class, family) |>
filter(!is.na(original))
birds <- eltonbird |>
transmute(
original = Scientific,
mass = `BodyMass-Value`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(Wilman_Bird_mass_g = mean(mass), .groups = "drop") #VERY IMPORANT - HOW TO AGGREGATE
mamm <- eltonmam |>
transmute(
original = Scientific,
mass = `BodyMass-Value`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(Wilman_Mam_mass_g = mean(mass), .groups = "drop")
rep <- repdat |>
transmute(
original = Binomial,
mass = `Maximum mass (log10(g))`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(Slavenko_mass_log10_g = mean(mass), .groups = "drop")
anim<-anidat |>
transmute(
original = species,
mass = `body mass`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(Herberstein_mass_kg = mean(mass), .groups = "drop")
marine <- mvertdat |>
transmute(
original = Species,
mass = `BM_g`
) |>
drop_na() |>
distinct_all() |>
left_join(taxonomy, by = "original") |>
group_by(gbif.binomial) |>
summarize(McCauley_mass_g = mean(mass), .groups = "drop")
# BIND ALL DATABASES
masses <- bind_rows(birds, mamm, anim, rep, marine)
db <- database |>
left_join(taxonomy, by = c("Species ID" = "original")) |>
left_join(masses, by = c("gbif.binomial" = "gbif.binomial"), relationship = "many-to-many") |>
mutate(
`Body mass source` = ifelse(is.na(`Body mass`), "databases", TraitRef),
`Body mass` = ifelse(is.na(`Body mass`),
ifelse(!is.na(masses$Wilman_Bird_mass_g),masses$Wilman_Bird_mass_g,
ifelse(!is.na(masses$Wilman_mamm_mass_g), masses$Wilman_mam_Mass_g,
ifelse(!is.na(masses$Slavenko_mass_log10_g), masses$Slavenko_mass_log10_g,
ifelse(!is.na(masses$McCauley_mass_g), masses$McCauley_mass_g,
ifelse(!is.na(masses$Herberstein_mass_kg), masses$Herberstein_mass_kg, NA))))), `Body mass`)
)
write_csv(db, "correctedspecies.csv") #WRITE NAME name.csv
writeLines(
strftime(Sys.time()),
con = "logs/CorrectSpeciesNames.R"
)
library(tidyverse)
dbcorr <- read_csv("correctedspecies.csv")
dbtrans <- dbcorr |> relocate(gbif.binomial, .after = `Species ID`) |>
relocate(`family`, .after = `Sub-rank`)|>
relocate(`class`, .after = `Sub-rank`)|>
relocate(`Body mass source`, .after = `TraitRef`)|>
rename(Class_gbif = `class`)|>
rename(Family_gbif = `family`)|>
rename(Species_ID_gbif = `gbif.binomial`)|>
relocate(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g ,Herberstein_mass_kg,McCauley_mass_g, .after = `Body mass measured (y/n)`)|>
select(-c(...34))
write_csv(db, "MovementDatabaseComplete.csv")
write_csv(dbtrans, "MovementDatabaseComplete.csv")
dbtrans <- dbcorr |> relocate(gbif.binomial, .after = `Species ID`) |>
relocate(`family`, .after = `Sub-rank`)|>
relocate(`class`, .after = `Sub-rank`)|>
relocate(`Body mass source`, .after = `TraitRef`)|>
rename(Class_gbif = `class`)|>
rename(Family_gbif = `family`)|>
rename(Species_ID_gbif = `gbif.binomial`)|>
relocate(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g ,Herberstein_mass_kg,McCauley_mass_g, .after = `Body mass measured (y/n)`)|>
select(-c(...34)) |>
mutate(`Body mass source` = ifelse(is.na(`Body mass`), MetaRef))
dbtrans <- dbcorr |> relocate(gbif.binomial, .after = `Species ID`) |>
relocate(`family`, .after = `Sub-rank`)|>
relocate(`class`, .after = `Sub-rank`)|>
relocate(`Body mass source`, .after = `TraitRef`)|>
rename(Class_gbif = `class`)|>
rename(Family_gbif = `family`)|>
rename(Species_ID_gbif = `gbif.binomial`)|>
relocate(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g ,Herberstein_mass_kg,McCauley_mass_g, .after = `Body mass measured (y/n)`)|>
select(-c(...34)) |>
mutate(`Body mass source` = ifelse(is.na(`Body mass`), no, MetaRef))
dbtrans <- dbcorr |> relocate(gbif.binomial, .after = `Species ID`) |>
relocate(`family`, .after = `Sub-rank`)|>
relocate(`class`, .after = `Sub-rank`)|>
relocate(`Body mass source`, .after = `TraitRef`)|>
rename(Class_gbif = `class`)|>
rename(Family_gbif = `family`)|>
rename(Species_ID_gbif = `gbif.binomial`)|>
relocate(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g ,Herberstein_mass_kg,McCauley_mass_g, .after = `Body mass measured (y/n)`)|>
select(-c(...34)) |>
mutate(`Body mass source` = ifelse(is.na(`Body mass`), MetaRef, "no"))
View(dbtrans)
View(dbtrans)
dbtrans <- dbcorr |> relocate(gbif.binomial, .after = `Species ID`) |>
relocate(`family`, .after = `Sub-rank`)|>
relocate(`class`, .after = `Sub-rank`)|>
relocate(`Body mass source`, .after = `TraitRef`)|>
rename(Class_gbif = `class`)|>
rename(Family_gbif = `family`)|>
rename(Species_ID_gbif = `gbif.binomial`)|>
relocate(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g ,Herberstein_mass_kg,McCauley_mass_g, .after = `Body mass measured (y/n)`)|>
select(-c(...34)) |>
mutate(`Body mass source` = coalesce(`Body mass source`, MetaRef))
View(dbtrans)
View(dbtrans)
write_csv(dbtrans, "MovementDatabaseComplete.csv")
write_csv(dbtrans, "MovementDatabaseExtensive.csv")
library(tidyverse)
dbcorr <- read_csv("correctedspecies.csv")
dbtrans <- dbcorr |> relocate(gbif.binomial, .after = `Species ID`) |>
relocate(`family`, .after = `Sub-rank`)|>
relocate(`class`, .after = `Sub-rank`)|>
relocate(`Body mass source`, .after = `TraitRef`)|>
rename(Class_gbif = `class`)|>
rename(Family_gbif = `family`)|>
rename(Species_ID_gbif = `gbif.binomial`)|>
relocate(Wilman_Bird_mass_g, Wilman_Mam_mass_g, Slavenko_mass_log10_g ,Herberstein_mass_kg,McCauley_mass_g, .after = `Body mass measured (y/n)`)|>
select(-c(...34)) |>
mutate(`Body mass source` = coalesce(`Body mass source`, MetaRef))
write_csv(dbtrans, "MovementDatabaseExtensive.csv")
View(dbtrans)
View(dbtrans)
dispersalDB <- dbtrans |> filter(`Movement type`== "Dispersal")
View(dispersalDB)
View(dispersalDB)
dispersalDB <- dbtrans |> filter(`Movement type`== "Dispersal") |>
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`)
)
dispersalDB <- dbtrans |> filter(`Movement type`== "Dispersal") |>
dispersalDB <- dbtrans |> filter(`Movement type`== "Dispersal") |>
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
!is.na(Wilman_Bird_mass_g) & `Body mass` == Wilman_Bird_mass_g ~ "Wilman_Bird_mass_g",
!is.na(Wilman_Mam_mass_g) & `Body mass` == Wilman_Mam_mass_g ~ "Wilman_Mam_mass_g",
!is.na(Slavenko_mass_log10_g) & `Body mass` == Slavenko_mass_log10_g ~ "Slavenko_mass_log10_g",
!is.na(Herberstein_mass_kg) & `Body mass` == Herberstein_mass_kg ~ "Herberstein_mass_kg",
!is.na(McCauley_mass_g) & `Body mass` == McCauley_mass_g ~ "McCauley_mass_g",
TRUE ~ "Other"
) )
dispersalDB <- dbtrans |> filter(`Movement type`== "Dispersal") |>
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`))|>
mutate(`Trait Database Ref` = case_when(
!is.na(Wilman_Bird_mass_g) & `Body mass` == Wilman_Bird_mass_g ~ "Wilman_Bird_mass_g",
!is.na(Wilman_Mam_mass_g) & `Body mass` == Wilman_Mam_mass_g ~ "Wilman_Mam_mass_g",
!is.na(Slavenko_mass_log10_g) & `Body mass` == Slavenko_mass_log10_g ~ "Slavenko_mass_log10_g",
!is.na(Herberstein_mass_kg) & `Body mass` == Herberstein_mass_kg ~ "Herberstein_mass_kg",
!is.na(McCauley_mass_g) & `Body mass` == McCauley_mass_g ~ "McCauley_mass_g",
TRUE ~ "Other"
) )
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g",
TRUE ~ "Other"
))
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g",
TRUE ~ "Other"
))
View(dispersalDB)
View(dispersalDB)
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g"
))
View(dispersalDB)
View(dispersalDB)
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman et al 2014",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman et al 2014",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko et al 2016",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein et al 2022",
`Body mass` == `McCauley_mass_g` ~ "McCauley et al 2015"
))
View(dispersalDB)
View(dispersalDB)
dispersalDB <- dbtrans |>
filter(`Movement type` == "Dispersal") |>
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g"
))
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g",
))
View(dispersalDB)
View(dispersalDB)
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g",
TRUE ~ "Other"
))
View(dispersalDB)
View(dispersalDB)
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g",
TRUE
))
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g",
))
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
unite(`Combined Mass Column`, c("Wilman_Bird_mass_g", "Wilman_Mam_mass_g", "Slavenko_mass_log10_g", "Herberstein_mass_kg", "McCauley_mass_g"), sep = ", ", na.rm = TRUE) %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), `Combined Mass Column`, `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g"
)
) %>%
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
unite(`Combined Mass Column`, c("Wilman_Bird_mass_g", "Wilman_Mam_mass_g", "Slavenko_mass_log10_g", "Herberstein_mass_kg", "McCauley_mass_g"), sep = ", ", na.rm = TRUE) %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), `Combined Mass Column`, `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g"
)
)
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
unite(`Combined Mass Column`, c("Wilman_Bird_mass_g", "Wilman_Mam_mass_g", "Slavenko_mass_log10_g", "Herberstein_mass_kg", "McCauley_mass_g"), sep = ", ", na.rm = TRUE) %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), `Combined Mass Column`, `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g"
)
)
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
unite(`Combined Mass Column`, c("Wilman_Bird_mass_g", "Wilman_Mam_mass_g", "Slavenko_mass_log10_g", "Herberstein_mass_kg", "McCauley_mass_g"), sep = ", ", na.rm = TRUE) %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), `Combined Mass Column`, `Body mass`),
`Trait Database Ref` = case_when(
`Combined Mass Column` == Wilman_Bird_mass_g ~ "Wilman_Bird_mass_g",
`Combined Mass Column` == Wilman_Mam_mass_g ~ "Wilman_Mam_mass_g",
`Combined Mass Column` == Slavenko_mass_log10_g ~ "Slavenko_mass_log10_g",
`Combined Mass Column` == Herberstein_mass_kg ~ "Herberstein_mass_kg",
`Combined Mass Column` == McCauley_mass_g ~ "McCauley_mass_g"
)
)
dispersalDB <- dbtrans %>%
filter(`Movement type` == "Dispersal") %>%
mutate(
`Body mass` = ifelse(is.na(`Body mass`), coalesce(`Wilman_Bird_mass_g`, `Wilman_Mam_mass_g`, `Slavenko_mass_log10_g`, `Herberstein_mass_kg`, `McCauley_mass_g`), `Body mass`),
`Trait Database Ref` = case_when(
`Body mass` == `Wilman_Bird_mass_g` ~ "Wilman_Bird_mass_g",
`Body mass` == `Wilman_Mam_mass_g` ~ "Wilman_Mam_mass_g",
`Body mass` == `Slavenko_mass_log10_g` ~ "Slavenko_mass_log10_g",
`Body mass` == `Herberstein_mass_kg` ~ "Herberstein_mass_kg",
`Body mass` == `McCauley_mass_g` ~ "McCauley_mass_g",
))
View(dispersalDB)
View(dispersalDB)
View(dbtrans)
View(dbtrans)
dispersalDB <- dbtrans |
filter(`Movement type` == "Dispersal")
dispersalDB <- dbtrans |>
filter(`Movement type` == "Dispersal")
View(dispersalDB)
View(dispersalDB)
write_csv(dispersalDB, "DispersalUntransformed.csv")
setwd('C:/Users/xr49abiw/Documents/DispersalProject/data')
